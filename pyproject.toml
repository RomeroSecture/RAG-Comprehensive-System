[tool.poetry]
name = "rag-comprehensive-system"
version = "0.1.0"
description = "A comprehensive RAG (Retrieval-Augmented Generation) system with advanced retrieval strategies"
authors = ["Your Name <you@example.com>"]
readme = "README.md"
python = "^3.11"

[tool.poetry.dependencies]
python = "^3.11"
fastapi = "^0.104.0"
uvicorn = {extras = ["standard"], version = "^0.24.0"}
pydantic = "^2.5.0"
pydantic-settings = "^2.1.0"
sqlalchemy = "^2.0.23"
alembic = "^1.13.0"
asyncpg = "^0.29.0"
redis = "^5.0.1"
celery = "^5.3.4"
openai = "^1.6.0"
anthropic = "^0.8.0"
sentence-transformers = "^2.2.2"
transformers = "^4.36.0"
torch = "^2.1.0"
langchain = "^0.1.0"
llama-index = "^0.9.0"
pgvector = "^0.2.4"
qdrant-client = "^1.7.0"
faiss-cpu = "^1.7.4"
networkx = "^3.2"
spacy = "^3.7.0"
pillow = "^10.1.0"
opencv-python = "^4.8.0"
structlog = "^23.2.0"
opentelemetry-api = "^1.21.0"
opentelemetry-sdk = "^1.21.0"
opentelemetry-instrumentation-fastapi = "^0.42b0"
prometheus-client = "^0.19.0"
sentry-sdk = "^1.39.0"
httpx = "^0.25.0"
dependency-injector = "^4.41.0"
python-multipart = "^0.0.6"
python-jose = {extras = ["cryptography"], version = "^3.3.0"}
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
tenacity = "^8.2.3"
slowapi = "^0.1.9"
cryptography = "^41.0.7"

[tool.poetry.group.dev.dependencies]
pytest = "^7.4.3"
pytest-asyncio = "^0.21.1"
pytest-cov = "^4.1.0"
pytest-mock = "^3.12.0"
faker = "^20.1.0"
black = "^23.12.0"
isort = "^5.13.0"
flake8 = "^6.1.0"
mypy = "^1.7.0"
bandit = "^1.7.5"
safety = "^3.0.0"
pre-commit = "^3.6.0"
ipython = "^8.18.0"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
line_length = 88

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -q --strict-markers"
testpaths = ["tests"]
python_files = "test_*.py"
python_classes = "Test*"
python_functions = "test_*"

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/migrations/*"]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false

[tool.bandit]
exclude_dirs = ["tests", "venv"]
tests = ["B201", "B301"]
skips = ["B101", "B601"]